<template>
	<div class="table">
        <!-- 标题 -->
        <div class="crumbs">
            <el-breadcrumb separator="/">
                    <el-breadcrumb-item><i class="el-icon-tickets"></i> 绩效考核管理/卫生室考核汇总统计</el-breadcrumb-item>
            </el-breadcrumb>
        </div>
		<!-- 开始列表 -->
		<div class="container"  v-loading="is_loading" element-loading-text="资源加载中，请稍候..." element-loading-spinner="el-icon-loading">
			<!-- 开始查询条件 -->
			<div class="handle-box table-cuoff-line">
				<el-row type="flex" justify="space-between" align="center">
					<el-col>

                        <div class="select-tip">年度</div>				
                        <el-select v-model="year" placeholder="计划年度" :change="select_stauts"  @change="select_stauts" class="handle-input">
                            <el-option key="" label="全部" value=""></el-option>
                            <el-option key="2019" label="2019年" value="2019"></el-option>
                            <el-option key="2020" label="2020年" value="2020"></el-option>
                            <el-option key="2021" label="2021年" value="2021"></el-option>
                            <el-option key="2022" label="2022年" value="2022"></el-option>
                            <el-option key="2023" label="2023年" value="2023"></el-option>
                            <el-option key="2024" label="2024年" value="2024"></el-option>
                            <el-option key="2025" label="2025年" value="2025"></el-option>
                        </el-select>

                        <div class="select-tip">季度</div>
                        <el-select v-model="quarter" placeholder="计划季度" :change="select_stauts"  @change="select_stauts" class="handle-input">
                            <el-option key="" label="全部" value=""></el-option>
                             <el-option key="1" label="一季度" value="1"></el-option>
                            <el-option key="2" label="二季度" value="2"></el-option>
                            <el-option key="3" label="三季度" value="3"></el-option>
                            <el-option key="4" label="四季度" value="4"></el-option>
                        </el-select>
						<div class="select-tip">卫生院</div>
						<el-select v-model="wsyValue" placeholder="卫生院" :change="select_stauts"  @change="select_stauts"  class="handle-input">
                                <el-option v-for="(item, i) in wsyData" :key="i" :label="item.orgname" :value="item.firstorgnumber"></el-option>
                        </el-select>
                        <div class="select-tip">考核计划</div>
                        <el-select v-model="planNumber" placeholder="考核计划" :change="select_stauts"  @change="select_stauts" class="handle-input">
                            <el-option v-for="item in planNumberList" :key="item.planNumber" :label="item.planName" :value="item.planNumber"></el-option>
                        </el-select>		

						<div class="select-tip">关键字</div>
						<el-input v-model="select_word" placeholder="要查询关键字" class="handle-input" ></el-input>
						<el-button type="primary" class="admin-btn" @click="search">搜索</el-button>
					</el-col>
					<!-- <el-button type="primary" class="admin-btn" @click="handleAdd">增加补助计划</el-button> -->
				</el-row>
			</div>
			<!-- 开始查询条件 -->
			<!-- 开始数据列表 -->
			<!-- <el-table v-if="!is_loading" :data="tableData" border style="width: 100%" ref="multipleTable">
				<el-table-column prop="planNumber" label="编号"/>
				<el-table-column prop="planName" label="计划名称"/>
				<el-table-column prop="YEAR" label="计划年度"/>
				<el-table-column prop="quarterName" label="计划季度"/>
				<el-table-column prop="orgName" label="卫生室"/>
                <el-table-column prop="firstOrgName" label="卫生院"/>
				<el-table-column prop="planNumber" label="补助计划"/>
				<el-table-column prop="createBy" label="制表人员"/>
				<el-table-column prop="createTime" label="制表时间"/>
                <el-table-column prop="checkBy" label="审核人员"/>
				<el-table-column prop="checkTime" label="审核时间"/>
				<el-table-column prop="checkState" label="状态"/>
				<el-table-column label="操作" width="180" fixed="right">
				<template slot-scope="scope">	
					<el-button v-if="scope.row.checkState==-1" size="mini"  type="text" @click="showDetail(scope.$index, scope.row)">制表</el-button>
					<el-button v-if="scope.row.checkState==1" size="mini"  type="text" @click="showDetail(scope.$index, scope.row)">已审核</el-button>
					<el-button v-if="scope.row.checkState==0" size="mini"  type="text" @click="showDetail(scope.$index, scope.row)">未审核</el-button>
				</template>
				</el-table-column>
				<div slot="empty" class="default-empty"><span>暂时没有内容哦！</span></div>
			</el-table> -->
            <el-table :data="tableDatas.tableData" border  style="width: 100%" class="box-table">
                <el-table-column type="index" width="50"></el-table-column>
                <el-table-column
                    v-for="(item,index) in tableDatas.fields"
                    :key="index"
                    :label="item.name"
                    :prop="item.id"
                    >
                    <template slot-scope="scope">
                    <div>{{scope.row[item.id]}}</div>
                    </template>
                </el-table-column>
            </el-table>


			<!-- 结束数据列表 -->
		</div>

		<!-- 结束删除提示框 -->
	</div>
</template>
<script> 
import axios from "@/services/axios";
import api from "@/services/api";
import moment from 'moment'
export default {
	 name: "tb_subsidy_plan",//页面名称
	 data() {
		 return {
			 tableData: [],//列表数据
			 batchAddFileList: [],//批量导入所选文件列表
			 cur_page: 1,//列表数据之当前页数
			 cur_size: 10,//列表数据之每页条数
			 total: 0,//列表数据之总条数
             select_word: "",//查询关键字
             year:'',//年度
             quarter:'',//季度
			 is_loading: false,//加载数据框显示标识
			 addVisible: false,//增加框显示标识 
			 editVisible: false,//修改框显示标识 
			 delVisible:false,//删除框显示标识 
			 editFlag:true,
			 wsyData:[],
			 wsyValue:"",
             tableDatas: {//动态表格列
                 fields:[],
                 tableData:[]
             },
             planNumber:"",
             planNumberList:[],
			 addForm: {},//增加表单
			 itemFrom: {
				 orgName: "",
				 createTime: "",
				 planName: "",
				 createBy: "",
			 },//修改表单
			 ids: "",// 待删除的后台编号
			 idx: -1,// 待删除的界面列表索
			 itemTableData: [],
			 //表单字段
			 form: {
				 planNumber: "",
				 planName: "",
				 planType: "",
				 period: "",
				 amount: "",
				 year: "",
				 quarter: "",
				 kpiTemplateNumber: "",
				 payRatio: "",
				 prePayRatio: "",
				 subsidyTarget: "",
				 prePayRatio2: "",
				 sumAmount: "",
				 topRewardsRatio: "",
				 indexRewardsRatio: "",
				 createBy: "",
				 createTime: "",
				 remark: ""
			 },
			 //表单验证规则，需绑定到对应表单中
			 rules: {
				 planNumber: [{ required: true, message: "请填写计划编号" }],
				 planName: [{ required: true, message: "请填写计划名称" }],
				 period: [{ required: true, message: "请填写补助周期" }],
				 amount: [{ required: true, message: "请填写单位补助金额" }],
				 year: [{ required: true, message: "请填写计划年度" }],
				 quarter: [{ required: true, message: "请填写计划季度" }],
				 payRatio: [{ required: true, message: "请填写拨款比例" }],
				 prePayRatio: [{ required: true, message: "请填写预拨比例" }],
				 subsidyTarget: [{ required: true, message: "请填写补助对象" }],
				 prePayRatio2: [{ required: true, message: "请填写特殊比例" }],
				 remark: [{ required: true, message: "请填写备注" }]
			 },
		 };
	 },
	 mounted() {
	 },
	 created() {

         this.getData();
		 this.getPlanNumberListData();
		 this.getWsyData();
	 },
	 methods: {
		 //搜索查询方法
		 search() {
			 this.cur_page = 1;
			 this.getData();
		 },
		 //表单提交前处理数据方法
		 handleData(action,_data) {
			 if(null != _data)
			 {
				 _data.model = 'tb_subsidy_plan';
				 _data.action = action;
			 }
			 return _data;
		 },
		 //获得编号方法
		 //查询列表数据方法
        //获取表格数据
        getData() {
            let listUp=[];
            let listRow=[];

            setTimeout(() => {
            let fieldsData=[];
            //头
            fieldsData.push({
                id: "kpiItemName",
                name: "检查"
            });
           fieldsData.push({
                id: "indexName",
                name: "检查项目"
            });
            //构建表头
            for(let i=0;i<listRow.length;i++){
                fieldsData.push(
                    {
                        name:listRow[i].checkOrgName,
                        id:listRow[i].orgDataNumber,
                    }
                   
                )
            }
            let listFlag=true;
            //考核列 orgDataNumber 值与 list[i][]对应
            let dealListData=[];
            let count =0;
            let dealCount=0;
             for(let row=0;row<listRow.length;row++){
                 for(let k1=0;k1<listUp.length;k1++){
                    if(listUp[k1][listRow[row].orgDataNumber]){//对应起来了
                        count++
                    }
                }
                if(listFlag){
                    for(let f=0;f<count;f++){
                         dealListData.push({});
                    }
                    listFlag=false;
                    break;
                }
            }

            for(let row=0;row<listRow.length;row++){
                 for(let k2=0;k2<listUp.length;k2++){
                    if(listUp[k2][listRow[row].orgDataNumber]){//对应起来了
                    //将比分赋值
                      dealListData[dealCount][listRow[row].orgDataNumber]=listUp[k2][listRow[row].orgDataNumber]
                      dealListData[dealCount].kpiItemName=listUp[k2].kpiItemName
                      dealListData[dealCount].indexName=listUp[k2].indexName
                      dealCount++
                    }
                }
                 dealCount=0
            }

            console.log(dealListData);
            console.log(fieldsData);
            this.tableDatas.tableData=dealListData;
            this.tableDatas.fields=fieldsData
         
        }, 1000)

            //考核打分
            axios.post({
                url: api.commn.udpAction,
                data: {
                    udpclass: "KIPTotalRecordCommService",
                    orgType: "2",
                    planNumber: this.planNumber
                }
            }).then(res => {
                console.log(api.secondorg.query, ' success', res)
                if(res.code == 0){
                   listUp=res.data;
                }
            })

            //打分的机构
             axios.post({
                url: api.commn.action,
                data: {
                    action: "select",
                    model: "tb_kpi_secondorglistbyplan",
					planNumber: this.planNumber,
					firstOrgNumber:this.wsyValue
                }
            }).then(res => {
                console.log(api.secondorg.query, ' success', res)
                if(res.code == 0){
                    listRow=res.data;
                }
            })
		},
		//获取所有卫生院
        getWsyData() {
            axios.get({
                url: api.firstorg.query
            }).then(res => {
                if(res.code == 0){
                    this.wsyData = res.data;
                }
            })
		},
        getPlanNumberListData(){
            this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: this.handleData('select',{
					 start: (this.cur_page - 1) * this.cur_size,
                     limit: this.cur_size,
                     planType:'4',
                     year:this.year,
                     quarter:this.quarter,
					 keyWord: this.select_word
					 })
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
					  this.planNumberList = res.data;
					//  this.total = res.sumsize;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
        },
		 getDetail(data) {
             var param={
                 action:"select",
                 model:"tb_kpi_record_index",
                 kpiNumber:data,
             }
			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: param
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
					 this.itemTableData = res.data;
					//  this.total = res.sumsize;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
		 },
		 // 新增数据方法
		 saveAdd(formName) {
			 if (this.$refs[formName]) {
				 this.$refs[formName].validate(valid => {
					 if (valid) {axios.post({ url: api.commn.action, data: this.handleData('insert',this.addForm) }).then(res => {
						 if (res.code == 0) {
							 this.addVisible = false;
							 this.$message.success("增加成功");
							 this.getData();
						 } else {
							 this.$message.error(res.message);
						 }
						 });
					 } else {
							 this.$message.error("验证未通过");
							 return;
					 }
				 });
			 }
		 },
		 // 编辑数据方法
		 saveEdit(formName) {
			 if (this.$refs[formName]) {
				 this.$refs[formName].validate(valid => {
					 if (valid) {axios.post({ url: api.commn.action, data: this.handleData('update',this.itemFrom) }).then(res => {
						 if (res.code == 0) {
							 this.editVisible = false;
							 this.$message.success("修改成功");
							 this.getData();
						 } else {
							 this.$message.error(res.message);
						 }
						 });
					 } else {
							 this.$message.error("验证未通过");
							 return;
					 }
				 });
			 }
		 },
		 //删除数据方法
		 deleteRow(){
			 axios.post({ url: api.commn.action, data: this.handleData('deleteById',{ planNumber: this.ids }) }).then(res => {
				 if (res.code == 0) {
					 this.delVisible = false;
					 this.tableData.splice(this.idx, 1);
					 this.$message.success("删除成功");
				 } else {
					 this.$message.error(res.message);
				 }
			 });
         },
        //强制刷新
        select_stauts(val){
			 this.$forceUpdate();
		 },
	 },
};
</script>
<style lang="scss" scoped>
@import "static/css/base.scss";
@import "static/css/base-company.scss";
.upload-con {
height: 32px;
line-height: 32px;
overflow: hidden;
}
</style>
