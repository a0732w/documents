<template>
	<div class="table">
        <!-- 标题 -->
        <div class="crumbs">
            <el-breadcrumb separator="/">
                <el-breadcrumb-item><i class="el-icon-tickets"></i>考核制度</el-breadcrumb-item>
            </el-breadcrumb>
        </div>
		<!-- 开始列表 -->
		<div class="container"  v-loading="is_loading" element-loading-text="资源加载中，请稍候..." element-loading-spinner="el-icon-loading">

			<el-form ref="editForm" :model="editForm" :rules="rules" label-width="150px">
                <el-row :gutter="20">
                <el-col :span="12">
                <el-form-item label="卫生院" prop="kpiTemplateNumber">
                    <el-select v-model="editForm.kpiTemplateNumber" placeholder="考核模版" :change="select_stauts"  @change="select_stauts" class="handle-input">
                         <el-option v-for="item in keiptemplatedata" :key="item.templateNumber" :label="item.templateName" :value="item.templateNumber"></el-option>
                    </el-select>
				</el-form-item>
                </el-col>
                <el-col :span="12">
				<el-form-item label="制表时间" prop="amount">
					<el-input v-model="editForm.amount" class="handle-input"></el-input>
				</el-form-item>
                </el-col>
                <el-col :span="12">
                <el-form-item label="补助计划" prop="kpiTemplateNumber">
                    <el-select v-model="editForm.kpiTemplateNumber" placeholder="考核模版" :change="select_stauts"  @change="select_stauts" class="handle-input">
                         <el-option v-for="item in keiptemplatedata" :key="item.templateNumber" :label="item.templateName" :value="item.templateNumber"></el-option>
                    </el-select>
				</el-form-item>
                </el-col>
                <el-col :span="12">
                <el-form-item label="制表人员" prop="amount">
					<el-input v-model="editForm.amount" class="handle-input"></el-input>
				</el-form-item>
                </el-col>
                </el-row>
			</el-form>

			<!-- 开始数据列表 -->
			<el-table v-if="!is_loading" :data="itemTableData" border style="width: 100%" ref="multipleTable">
				<el-table-column type="index" label="序号"></el-table-column>
				<el-table-column prop="planNumber" label="考核项目"/>
				<el-table-column prop="planName" label="考核项目权重"/>
				<el-table-column prop="periodName" label="考核项目应该完成比例"/>				
				<el-table-column prop="year" label="考核项目完成比例"/>
                <el-table-column prop="quartername" label="考核指标"/>
 				<el-table-column prop="address" label="考核得分" width="180" >       
				<template slot-scope="scope" >
                   <span v-if="editFlag">
                            <el-input size="mini" placeholder="请输入内容" v-model="scope.row.address">
                            </el-input>
                            </span>
                            <span v-else>{{scope.row.address}}</span>
		
				</template>
				</el-table-column>               
				<div slot="empty" class="default-empty"><span>暂时没有内容哦！</span></div>
			</el-table>
			<!-- 开始分页控件 -->
			<div v-show="!is_loading" v-if="total>cur_size" class="pagination">
				<el-pagination  @current-change="handleCurrentChange"  layout="prev, pager, next, jumper, ->, total" :total="total" :current-page="cur_page"/>
			</div>
		    <el-button v-if="editFlag"  type="primary" @click="handleAddrEdit()">确 定</el-button>
             <el-button v-if="!editFlag"  type="primary" @click="handleAddrEditAudit()">审 核</el-button>
            <el-button  class="admin-btn" @click="handleAddrEditCancel()">取 消</el-button>
		</div>
	</div>
</template>
<script> 
import axios from "@/services/axios";
import api from "@/services/api";
import moment from 'moment'
export default {
	 name: "tb_subsidy_plan",//页面名称
	 data() {
		 return {
			 tableData: [],//列表数据
			 batchAddFileList: [],//批量导入所选文件列表
			 cur_page: 1,//列表数据之当前页数
			 cur_size: 10,//列表数据之每页条数
			 total: 0,//列表数据之总条数
             select_word: "",//查询关键字
             year:'',//年度
             quarter:'',//季度
             keiptemplatedata:[],//模版数据
			 is_loading: false,//加载数据框显示标识
			 addVisible: false,//增加框显示标识 
			 editVisible: false,//修改框显示标识 
             delVisible:false,//删除框显示标识 
             editFlag: true,
			 addForm: {},//增加表单
			 editForm: {},//修改表单
			 ids: "",// 待删除的后台编号
			 idx: -1,// 待删除的界面列表索
			 itemTableData:[],
			 //表单字段
			 form: {
				 planNumber: "",
				 planName: "",
				 planType: "",
				 period: "",
				 amount: "",
				 year: "",
				 quarter: "",
				 kpiTemplateNumber: "",
				 payRatio: "",
				 prePayRatio: "",
				 subsidyTarget: "",
				 prePayRatio2: "",
				 sumAmount: "",
				 topRewardsRatio: "",
				 indexRewardsRatio: "",
				 createBy: "",
				 createTime: "",
				 remark: ""
			 },
			 //表单验证规则，需绑定到对应表单中
			 rules: {
				 planNumber: [{ required: true, message: "请填写计划编号" }],
				 planName: [{ required: true, message: "请填写计划名称" }],
				 period: [{ required: true, message: "请填写补助周期" }],
				 amount: [{ required: true, message: "请填写单位补助金额" }],
                 year: [{ required: true, message: "请填写计划年度" }],
                 kpiTemplateNumber: [{ required: true, message: "请填写模版编号" }],
			     payRatio: [{ required: true, message: "请填写拨款比例" }],
				 subsidyTarget: [{ required: true, message: "请填写补助对象" }],
				 remark: [{ required: true, message: "请填写备注" }]
			 },
		 };
	 },
	 mounted() {
	 },
	 created() {
         let userinfo = localStorage.getItem('userinfo');
         userinfo = JSON.parse(userinfo);
         this.addForm.createBy = userinfo.username;
         this.getKeiptemplatedata();
		 this.getData();
	 },
	 methods: {
		 //搜索查询方法
		 search() {
			 this.cur_page = 1;
			 this.getData();
		 },
		 //表单提交前处理数据方法
		 handleData(action,_data) {
			 if(null != _data)
			 {
				 _data.model = 'tb_subsidy_plan';
				 _data.action = action;
			 }
			 return _data;
		 },
		 //获得编号方法
		 getNumber(){
			 axios.post({ url: api.commn.getNumber, data:{numberRuleCode:'PlanNumber'} }).then(res => {
				 if (res.code == 0) {
                     this.addForm.planNumber = res.data;
                     this.select_stauts();
				 } else {
					this.addForm.planNumber ='1';
				 }
			 });
		 },
		 //分页导航方法
		 handleCurrentChange(val) {
			 this.cur_page = val;
			 this.getData();
		 },
		 //弹出增加界面方法
		 handleAdd() {
             
             console.log(this.$route.query.id)
			 this.getNumber();
			 this.addForm.planName = '';
			 this.addForm.planType = '4';
			 this.addForm.period = '';
			 this.addForm.amount = '';
			 this.addForm.year = '';
			 this.addForm.quarter = '';
			 this.addForm.kpiTemplateNumber = '';
			 this.addForm.payRatio = '';
             this.addForm.subsidyTarget = '2';
             this.addForm.period = '1';
			 this.addForm.sumAmount = '';
			 this.addForm.topRewardsRatio = '';
			 this.addForm.indexRewardsRatio = '';
			 this.addForm.remark = '';
             this.addVisible = true;
             
		 },
		 //弹出修改界面方法
		 handleEdit(index, row) {
			 this.idx = index;
			 this.editForm = Object.assign({}, row);
			 this.editVisible = true;
		 },
		 //弹出删除界面框方法
		 handleDelete(index, row) {
			 this.idx = index;
			 this.ids = row.planNumber;
			 this.delVisible = true;
		 },
		 //查询列表数据方法
		 getData() {
			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: this.handleData('select',{
					 start: (this.cur_page - 1) * this.cur_size,
                     limit: this.cur_size,
                     planType:'4',
                     year:this.year,
                     quarter:this.quarter,
					 keyWord: this.select_word
					 })
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
					 this.tableData = res.data;
					 this.total = res.sumsize;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
		 },
		 // 新增数据方法
		 saveAdd(formName) {
			 if (this.$refs[formName]) {
				 this.$refs[formName].validate(valid => {
					 if (valid) {axios.post({ url: api.commn.action, data: this.handleData('insert',this.addForm) }).then(res => {
						 if (res.code == 0) {
							 this.addVisible = false;
							 this.$message.success("增加成功");
							 this.getData();
						 } else {
							 this.$message.error(res.message);
						 }
						 });
					 } else {
							 this.$message.error("验证未通过");
							 return;
					 }
				 });
			 }
		 },
		 // 编辑数据方法
		 saveEdit(formName) {
			 if (this.$refs[formName]) {
				 this.$refs[formName].validate(valid => {
					 if (valid) {axios.post({ url: api.commn.action, data: this.handleData('update',this.editForm) }).then(res => {
						 if (res.code == 0) {
							 this.editVisible = false;
							 this.$message.success("修改成功");
							 this.getData();
						 } else {
							 this.$message.error(res.message);
						 }
						 });
					 } else {
							 this.$message.error("验证未通过");
							 return;
					 }
				 });
			 }
		 },
		 //删除数据方法
		 deleteRow(){
			 axios.post({ url: api.commn.action, data: this.handleData('deleteById',{ planNumber: this.ids }) }).then(res => {
				 if (res.code == 0) {
					 this.delVisible = false;
					 this.tableData.splice(this.idx, 1);
					 this.$message.success("删除成功");
				 } else {
					 this.$message.error(res.message);
				 }
			 });
         },
        //强制刷新
        select_stauts(val){
			 this.$forceUpdate();
         },
        //获得考核模版数据
        getKeiptemplatedata() { 
			 var parameter = { action:'select',model:'tb_kpi_template'};
			 axios.post({
				 url: api.commn.action,
				 data: parameter
			 }).then(res => {
				 if (res.code == 0) {
					 this.keiptemplatedata = res.data;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
         },
         //确定编辑表格
         handleAddrEdit(){
            this.editFlag=false;
         },
        handleAddrEditCancel(){
            this.editFlag=true;
         },
        handleAddrEditAudit(){

        }
	 },
};
</script>
<style lang="scss" scoped>
@import "static/css/base.scss";
@import "static/css/base-company.scss";
.upload-con {
height: 32px;
line-height: 32px;
overflow: hidden;
}
</style>
