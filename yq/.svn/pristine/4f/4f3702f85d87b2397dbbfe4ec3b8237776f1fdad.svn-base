<template>
	<div class="table">
        <!-- 标题 -->
        <div class="crumbs">
            <el-breadcrumb separator="/">
                    <el-breadcrumb-item><i class="el-icon-tickets"></i> 资金预拨管理/卫生院奖励资金管理</el-breadcrumb-item>
            </el-breadcrumb>
        </div>
		<!-- 开始列表 -->
		<div class="container"  v-loading="is_loading" element-loading-text="资源加载中，请稍候..." element-loading-spinner="el-icon-loading">
			<!-- 开始查询条件 -->
			<div class="handle-box table-cuoff-line">
				<el-row type="flex" justify="space-between" align="center">
					<el-col>

                        <div class="select-tip">年度</div>				
                        <el-select v-model="year" placeholder="计划年度" :change="initPlan"  @change="initPlan" class="handle-input">
                            <el-option key="" label="全部" value=""></el-option>
                            <el-option key="2019" label="2019年" value="2019"></el-option>
                            <el-option key="2020" label="2020年" value="2020"></el-option>
                            <el-option key="2021" label="2021年" value="2021"></el-option>
                            <el-option key="2022" label="2022年" value="2022"></el-option>
                            <el-option key="2023" label="2023年" value="2023"></el-option>
                            <el-option key="2024" label="2024年" value="2024"></el-option>
                            <el-option key="2025" label="2025年" value="2025"></el-option>
                        </el-select>

                        <div class="select-tip">季度</div>
                        <el-select v-model="quarter" placeholder="计划季度" :change="initPlan"  @change="initPlan" class="handle-input">
                            <el-option key="" label="全部" value=""></el-option>
                             <el-option key="1" label="一季度" value="1"></el-option>
                            <el-option key="2" label="二季度" value="2"></el-option>
                            <el-option key="3" label="三季度" value="3"></el-option>
                            <el-option key="4" label="四季度" value="4"></el-option>
                        </el-select>	
                        	
                        <div class="select-tip">奖金计划</div>
                        <el-select v-model="rewardValue" placeholder="奖金计划" :change="select_stauts"  @change=" select_stauts" class="handle-input">
                                <el-option v-for="(item, i) in rewardDate" :key="i" :label="item.planName" :value="item.planNumbersss"></el-option>
                            </el-select>                        

						<div class="select-tip">关键字</div>
						<el-input v-model="select_word" placeholder="要查询关键字" class="handle-input" ></el-input>
						<el-button type="primary" class="admin-btn" @click="search">搜索</el-button>
					</el-col>
					<!-- <el-button type="primary" class="admin-btn" @click="handleAdd">增加补助计划</el-button> -->
				</el-row>
			</div>
			<!-- 开始查询条件 -->
			<!-- 开始数据列表 -->
			<el-table v-if="!is_loading" :data="tableData" border style="width: 100%" ref="multipleTable">
				<el-table-column prop="YEAR" label="年度"/>
				<el-table-column prop="planName" label="奖金计划"/>
                <el-table-column prop="sumServicePopCount" label="管辖人口"/>
				<el-table-column prop="servicePopCount" label="服务人口"/>
				<el-table-column prop="topRewardsAmount" label="考核指标奖励"/>
				<el-table-column prop="indexRewardsAmount" label="排名奖励"/>
                <el-table-column prop="sumRewardsAmount" label="奖励奖金总量"/>
                <el-table-column prop="checkTime" label="审核时间"/>
                <el-table-column prop="checkBy" label="审核人"/>
				<el-table-column label="操作" width="180" fixed="right">
				<template slot-scope="scope">	
					<el-button size="mini"  type="text" @click="showDetail(scope.$index, scope.row)">{{scope.row.checkStateName}}</el-button>
				</template>
				</el-table-column>
				<div slot="empty" class="default-empty"><span>暂时没有内容哦！</span></div>
			</el-table>
			<!-- 开始分页控件 -->
			<div v-show="!is_loading" v-if="total>cur_size" class="pagination">
				<el-pagination  @current-change="handleCurrentChange"  layout="prev, pager, next, jumper, ->, total" :total="total" :current-page="cur_page"/>
			</div>
			<!-- 结束分页控件 -->
			<!-- 结束数据列表 -->
		</div>
		<!-- 结束列表 -->
		<!-- 结束修改弹出框 -->
		<!-- 开始删除提示框 -->
		<el-dialog title="提示" :visible.sync="delVisible" width="400px" center>
			<div class="del-dialog-cnt">是否确定删除？</div>
			<span slot="footer" class="dialog-footer">
				<el-button @click="delVisible = false">取 消</el-button>
				<el-button type="primary" class="admin-btn" @click="deleteRow">确 定</el-button>
			</span>
		</el-dialog>
		<!-- 结束删除提示框 -->
	</div>
</template>
<script> 
import axios from "@/services/axios";
import api from "@/services/api";
import moment from 'moment'
import { Row } from 'element-ui';
export default {
	 name: "tb_subsidy_plan",//页面名称
	 data() {
		 return {
			 tableData: [],//列表数据
			 batchAddFileList: [],//批量导入所选文件列表
			 cur_page: 1,//列表数据之当前页数
			 cur_size: 10,//列表数据之每页条数
			 total: 0,//列表数据之总条数
             select_word: "",//查询关键字
             year:'',//年度
             quarter:'',//季度
			 is_loading: false,//加载数据框显示标识
			 addVisible: false,//增加框显示标识 
			 editVisible: false,//修改框显示标识 
			 delVisible:false,//删除框显示标识 
			 addForm: {},//增加表单
			 editForm: {},//修改表单
			 ids: "",// 待删除的后台编号
             idx: -1,// 待删除的界面列表索
             rewardDate:[],
             rewardValue:"",
			 //表单字段
			 form: {
				 planNumber: "",
				 planName: "",
				 planType: "",
				 period: "",
				 amount: "",
				 year: "",
				 quarter: "",
				 kpiTemplateNumber: "",
				 payRatio: "",
				 prePayRatio: "",
				 subsidyTarget: "",
				 prePayRatio2: "",
				 sumAmount: "",
				 topRewardsRatio: "",
				 indexRewardsRatio: "",
				 createBy: "",
				 createTime: "",
				 remark: ""
			 },
			 //表单验证规则，需绑定到对应表单中
			 rules: {
				 planNumber: [{ required: true, message: "请填写计划编号" }],
				 planName: [{ required: true, message: "请填写计划名称" }],
				 period: [{ required: true, message: "请填写补助周期" }],
				 amount: [{ required: true, message: "请填写单位补助金额" }],
				 year: [{ required: true, message: "请填写计划年度" }],
				 quarter: [{ required: true, message: "请填写计划季度" }],
				 payRatio: [{ required: true, message: "请填写拨款比例" }],
				 prePayRatio: [{ required: true, message: "请填写预拨比例" }],
				 subsidyTarget: [{ required: true, message: "请填写补助对象" }],
				 prePayRatio2: [{ required: true, message: "请填写特殊比例" }],
				 remark: [{ required: true, message: "请填写备注" }]
			 },
		 };
	 },
	 mounted() {
	 },
	 created() {

         let userinfo = localStorage.getItem('userinfo');
         userinfo = JSON.parse(userinfo);
         this.addForm.createBy = userinfo.username;
		 this.getData();
		 this.initPlan();
	 },
	 methods: {
		 //搜索查询方法
		 search() {
			 this.cur_page = 1;
			 this.getData();
		 },
		 //表单提交前处理数据方法
		 handleData(action,_data) {
			 if(null != _data)
			 {
				 _data.model = 'tb_subsidy_plan';
				 _data.action = action;
			 }
			 return _data;
		 },
		 //获得编号方法
		 getNumber(){
			 axios.post({ url: api.commn.getNumber, data:{numberRuleCode:'PlanNumber'} }).then(res => {
				 if (res.code == 0) {
                     this.addForm.planNumber = res.data;
                     this.select_stauts();
				 } else {
					this.addForm.planNumber ='1';
				 }
			 });
		 },
		 showDetail(index, row) {
			 //卫生院+年+季度+
			//  let wsyrewardItemTitle=row.planName+"基本公卫绩效评价奖励资金汇总表";
			//  localStorage.setItem('wsyrewardItemTitle',String(wsyrewardItemTitle));
			 localStorage.setItem('rewardsNumber',row.rewardsNumber);
			 
			 this.$router.push({
        		path: "/gov/subsidy/wsyrewarditem",
        			query: {         //参数携带方式
					  rewardsNumber: row.rewardsNumber,
					  tesTitle:row.planName+"卫生院奖励资金汇总表",
        		}
      		});
		 },
		 //分页导航方法
		 handleCurrentChange(val) {
			 this.cur_page = val;
             this.getData();
             this.getRewardDate();
            //  this.getRewardDate();
		 },
		 //弹出修改界面方法
		 handleEdit(index, row) {
			 this.idx = index;
			 this.editForm = Object.assign({}, row);
			 this.editVisible = true;
		 },
		 //弹出删除界面框方法
		 handleDelete(index, row) {
             console.log(index);
			//  this.idx = index;
			//  this.ids = row.planNumber;
			//  this.delVisible = true;
		 },
		 //查询列表数据方法
		 getData() {
             var param={
                 action:"select",
                 model:"tb_rewards",//奖励
                 YEAR:this.year,
				 quarterName:this.quarter,
				 planNumber:this.planNameValue,
				 keyWord:this.select_word,
				 start: (this.cur_page - 1) * this.cur_size,
                 limit: this.cur_size,
             }
			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: param
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
					 this.tableData = res.data;
					 this.total = res.sumsize;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
		 },
		 initPlan() {
             var param={
                action:"select",
				model:"tb_subsidy_plan",
				kpiType:'1',//1：包括：卫生院补助KPI，卫生院奖金KPI,2：包括卫生院KPI的计划
                year:this.year,
                quarter:this.quarter,
				keyWord: ''
                //  planNumber:"",
             }
			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: param
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
					 this.rewardDate = res.data;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
		 },
        getRewardDate() {
             var param={
                action:"select",
				model:"tb_subsidy_plan",
				planType:'2',
                year:this.year,
				quarter:this.quarter,
             }
			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: param
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
					 this.rewardDate = res.data;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
		 },
		 // 新增数据方法
		 saveAdd(formName) {
			 if (this.$refs[formName]) {
				 this.$refs[formName].validate(valid => {
					 if (valid) {axios.post({ url: api.commn.action, data: this.handleData('insert',this.addForm) }).then(res => {
						 if (res.code == 0) {
							 this.addVisible = false;
							 this.$message.success("增加成功");
							 this.getData();
						 } else {
							 this.$message.error(res.message);
						 }
						 });
					 } else {
							 this.$message.error("验证未通过");
							 return;
					 }
				 });
			 }
		 },
		 // 编辑数据方法
		 saveEdit(formName) {
			 if (this.$refs[formName]) {
				 this.$refs[formName].validate(valid => {
					 if (valid) {axios.post({ url: api.commn.action, data: this.handleData('update',this.editForm) }).then(res => {
						 if (res.code == 0) {
							 this.editVisible = false;
							 this.$message.success("修改成功");
							 this.getData();
						 } else {
							 this.$message.error(res.message);
						 }
						 });
					 } else {
							 this.$message.error("验证未通过");
							 return;
					 }
				 });
			 }
		 },
		 //删除数据方法
		 deleteRow(){
			 axios.post({ url: api.commn.action, data: this.handleData('deleteById',{ planNumber: this.ids }) }).then(res => {
				 if (res.code == 0) {
					 this.delVisible = false;
					 this.tableData.splice(this.idx, 1);
					 this.$message.success("删除成功");
				 } else {
					 this.$message.error(res.message);
				 }
			 });
         },
        //强制刷新
        select_stauts(val){
			// this.getData();
			 this.$forceUpdate();
		 },
	 },
};
</script>
<style lang="scss" scoped>
@import "static/css/base.scss";
@import "static/css/base-company.scss";
.upload-con {
height: 32px;
line-height: 32px;
overflow: hidden;
}
</style>
