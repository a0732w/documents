<template>
  <div class="table">
    <div class="crumbs">
      <el-breadcrumb separator="/">
        <el-breadcrumb-item>
          <i class="el-icon-tickets"></i>
          考核指标管理/考核指标管理
          </el-breadcrumb-item>
      </el-breadcrumb>
    </div>

    <el-row >
      <el-col class="bg-purple-light" :span="6">
         <div>考核项目</div>
    <div class="grid-content bg-purple">
          <el-tree
            :data="templateList" 
            :props="defaultProps"
            :load="loadNode"
            @node-click="handleNodeClick">
            <span class="custom-tree-node" slot-scope="{ node, data }">
              <span v-if="node.data.kpiItemName!=null" size="mini">{{ node.data.kpiItemName| ellipsis }}</span>
              <span v-if="node.data.templateName!=null"  size="mini">{{ node.data.templateName| ellipsis }}</span>
              <span>
                <el-dropdown>
                  <span class="el-dropdown-link">管理<i class="el-icon-arrow-down el-icon--right"></i>
                  </span>
                  <el-dropdown-menu slot="dropdown">
                    <el-dropdown-item  @click.native="() => handleAdd(node, data)">增加考核指标</el-dropdown-item>
                    <el-dropdown-item  @click.native="() => handleEdit(node, data)">修改考核指标</el-dropdown-item>
                    <el-dropdown-item  @click.native="() => del(node, data)">删除考核指标</el-dropdown-item>
                    </el-dropdown-menu>
                  </el-dropdown>
                <!-- <el-button type="text" size="mini" slot="reference" @click="() => handleAdd(data)">
                    新增
                </el-button>
                <el-button type="text" size="mini" slot="reference" @click="() => handleEdit(node.data)">
                  修改
                </el-button>
                <el-button type="text" size="mini" slot="reference" @click="() => del(data)">
                  删除
                </el-button> -->
              </span>
            </span>

            
          </el-tree>
        </div>
      </el-col>
      <el-col :span="18">
        <div class="grid-content bg-purple-light">
			<el-table v-if="!is_loading" :data="tableData" border style="width: 100%" ref="multipleTable">
				<el-table-column prop="templateNumber" label="考核模板"/>
				<el-table-column prop="kpiItemNumber" label="考核项目"/>
				<el-table-column prop="kpiItemName" label="考核项目权重"/>				
				<el-table-column prop="kpiItemName" label="考核项目应得分"/>
        <el-table-column prop="indexName" label="考核指标"/>
        <el-table-column prop="rule"  show-overflow-tooltip label="计算标准"/>
				<el-table-column label="操作" width="180" fixed="right">
				<template slot-scope="scope">
					<!-- <el-button size="mini"  type="text" @click="handleDelIndicators(scope.$index, scope.row)">删除指标</el-button> -->
					<el-button size="mini"  type="text" @click="handleCount(scope.$index, scope.row)">计算标准</el-button>
				</template>
				</el-table-column>
				<div slot="empty" class="default-empty"><span>暂时没有内容哦！</span></div>
			</el-table>
			<!-- 开始分页控件 -->
			<div v-show="!is_loading" v-if="total>cur_size" class="pagination">
				<el-pagination  @current-change="handleCurrentChange"  layout="prev, pager, next, jumper, ->, total" :total="total" :current-page="cur_page"/>
			</div>
          </div>
        </el-col>
    </el-row>

		<!-- 开始增加弹出框 -->
		<el-dialog title="新增绩效考核项目" :visible.sync="addVisible" width="500px">
			<el-form ref="ruleForm" :model="ruleForm" :rules="rules" label-width="150px">
				<el-form-item label="考核模板" prop="templateNumber">
            <el-select v-model="ruleForm.templateNumber" placeholder="考核模版" :change="select_stauts"  @change="select_stauts" class="handle-input">
                  <el-option v-for="item in keiptemplatedata" :key="item.templateNumber" :label="item.templateName" :value="item.templateNumber"></el-option>
            </el-select>
				</el-form-item>
				<el-form-item label="考核项目" prop="kpiItemNumber">
            <el-select v-model="ruleForm.kpiItemNumber" placeholder="考核模版" :change="select_stauts"  @change="select_stauts" class="handle-input">
                  <el-option v-for="item in keiptemplatedata" :key="item.kpiItemNumber" :label="item.templateName" :value="item.kpiItemNumber"></el-option>
            </el-select>
				</el-form-item>
				<el-form-item label="指标名称" prop="indexName">
					<el-input v-model="ruleForm.indexName" class="handle-input"></el-input>
				</el-form-item>
			</el-form>
			<span slot="footer" class="dialog-footer">
				<el-button @click="addVisible = false">取 消</el-button>
				<el-button type="primary" class="admin-btn" @click="saveAdd('ruleForm')">确 定</el-button>
			</span>
		</el-dialog>
		<!-- 结束增加弹出框 -->
		<!-- 开始修改弹出框 -->
		<el-dialog title="修改绩效考核项目" :visible.sync="editVisible" width="500px">
			<el-form ref="ruleForm" :model="ruleForm" :rules="rules" label-width="150px">
				<el-form-item label="考核模板" prop="templateNumber">
            <el-select v-model="ruleForm.templateNumber" placeholder="考核模版" :change="select_stauts"  @change="select_stauts" class="handle-input">
                  <el-option v-for="item in keiptemplatedata" :key="item.templateNumber" :label="item.templateName" :value="item.templateNumber"></el-option>
            </el-select>
				</el-form-item>
				<el-form-item label="考核项目" prop="kpiItemNumber">
            <el-select v-model="ruleForm.kpiItemNumber" placeholder="考核模版" :change="select_stauts"  @change="select_stauts" class="handle-input">
                  <el-option v-for="item in keiptemplatedata" :key="item.kpiItemNumber" :label="item.templateName" :value="item.kpiItemNumber"></el-option>
            </el-select>
				</el-form-item>
				<el-form-item label="指标名称" prop="indexName">
					<el-input v-model="ruleForm.indexName" class="handle-input"></el-input>
				</el-form-item>
			</el-form>
			<span slot="footer" class="dialog-footer">
				<el-button @click="editVisible = false">取 消</el-button>
				<el-button type="primary" class="admin-btn" @click="saveEdit('ruleForm')">确 定</el-button>
			</span>
		</el-dialog>

    	<el-dialog title="计算标准" :visible.sync="countVisible" width="600px">
			<el-form ref="countForm" :model="countForm" :rules="rules" label-width="100px">
      <el-row :gutter="20">
        <el-col :span="20">
				  <el-form-item label="表达式" prop="indexName">
					<el-input v-model="countForm.indexName" class="handle-input"></el-input>
				  </el-form-item>
        </el-col>
        <el-col :span="20">
				<el-form-item label="表达式" prop="indexName">
				   <el-select prop="countForm.indexName" placeholder="考核模版" :change="select_stauts"  @change="select_stauts" class="handle-input">
              <el-option key="" label=">=" value=">="></el-option>
              <el-option key="1" label="<=" value="<="></el-option>
              <el-option key="2" label="=" value="="></el-option>
              <el-option key="3" label=">" value=">"></el-option>
              <el-option key="4" label="<" value="<"></el-option>
          </el-select>
				</el-form-item>
        </el-col>

        <el-col :span="20">
				<el-form-item label="表达式" prop="indexName">
					<el-input v-model="countForm.indexName" class="handle-input"></el-input>
				</el-form-item>
        </el-col>

        <el-col :span="20">
				<el-form-item label="得分" prop="indexName">
					<el-input v-model="countForm.indexName" class="handle-input"></el-input>
				</el-form-item>
        </el-col>
        <el-col :span="20">
			<el-table v-if="!is_loading" :data="tableData" border style="width: 100%" ref="multipleTable">
				<el-table-column prop="templateNumber" label="表达式"/>
				<el-table-column prop="kpiItemNumber" label="得分"/>
				<el-table-column label="删除" width="180" fixed="right">
          
				<template slot-scope="scope">
					<!-- <el-button size="mini"  type="text" @click="handleDelIndicators(scope.$index, scope.row)">删除指标</el-button> -->
					<el-button size="mini"  type="text" @click="handleCountDelete(scope.$index, scope.row)">删除</el-button>
				</template>
				</el-table-column>
				<div slot="empty" class="default-empty"><span>暂时没有内容哦！</span></div>
			</el-table>
        </el-col>
      </el-row>        
			</el-form>
			<span slot="footer" class="dialog-footer">
				<el-button @click="addVisible = false">取 消</el-button>
				<el-button type="primary" class="admin-btn" @click="saveAdd('countForm')">确 定</el-button>
			</span>
		</el-dialog>
  </div>
</template>

<script>
import axios from "@/services/axios";
import api from "@/services/api";
import bus from "@/components/common/bus";

export default {
  name: "kpi",
  filters: {
    ellipsis (value) {
      if (!value) return ''
      if (value.length > 10) {
        return value.slice(0,10) + '...'
      }
      return value
    }
  },
  data() {
    return {
      currentPage: 1,
      pageSize: 10,
      sumsize: 1,
      keyword: "",
      tableData: [],
      cur_page: 1,
      cur_size: 10,//列表数据之每页条数
      total: 0,//列表数据之总条数
      idx:null,
      kpiData: [],
      mapkeyword: "",
      managementVisible: false,
      addVisible: false,
      editVisible: false,
      delVisible: false,
      countVisible: false,
      mapVisible: false,
      keiptemplatedata:[],//模板名称
      testData: [{
        id: 1,
        label: '一级 1',
        children: [{
          id: 4,
          label: '二级 1-1',
          children: [{
            id: 9,
            label: '三级 1-1-1'
          }, {
            id: 10,
            label: '三级 1-1-2'
          }]
        }]
      }],		 
      mapStyle: {
        width: "550px",
        height: "300px"
      },
      center: { lng: 115.47146, lat: 38.879989 },
      zoom: 15,
      dialogTitle: "",
      ruledata:[],//计算标准表格的值
      rule:"",
      templateList:[],//模板列表item
      itemList:[],//模板列表
      defaultProps: {
          children: 'children',
          label: 'label'
      },
      countForm:{
        kpiIndex: "",
        indexName: "",
        templateNumber: "",
        kpiItemNumber: "",
        bds1:"",
        bds2:"",
        bds3:"",
        score:"",
      },
      ruleForm: {
        kpiIndex: "",
        indexName: "",
        templateNumber: "",
        kpiItemNumber: "",
      },
      rules: {
        indexName: [
        { required: true, message: "请输入模板名称", trigger: "blur" } 
        ],
        templateNumber: [
          { required: true, message: "请输入考核模板", trigger: "blur" } 
        ],
        kpiItemNumber : [   
          { required: true, message: "请输入考核项目", trigger: "blur" } 
        ],     
      },
      idx: -1
    };
  },
  created() {
    this.getData();
    this.getTreeData();
    this.getkpiData();
    this.getTemplate();
    // this.getTestDate();
     console.log("我是");
    console.log(this.templateList);

    bus.$on(
      "tags" + this.$router.history.current.fullPath.split("/").join("-"),
      this.getData
    );
  },
  computed: {
    data() {
      return this.tableData;
    }
  },
  methods: {
    // 分页导航
    handleCurrentChange(val) {
      this.cur_page = val;
      this.getData();
    },
		 //获得编号方法
		 getNumber(){
			 axios.post({ url: api.commn.getNumber, data:{numberRuleCode:'PlanNumber'} }).then(res => {
				 if (res.code == 0) {
          this.ruleForm.kpiItemNumber = res.data;
				 } else {
					this.ruleForm.kpiItemNumber ='1';
				 }
			 });
		 },
    //添加卫生室弹框
    showAddWssAlert() {
      this.dialogTitle = "新增考核绩效考核指标";
      this.addVisible = true;
      Object.assign(this.$data.ruleForm, this.$options.data().ruleForm);
      // this.getMaxnumber();
    },
    showEditWssAlert() {
      this.dialogTitle = "修改考核绩效考核指标";
      this.editVisible = true;
      Object.assign(this.$data.ruleForm, this.$options.data().ruleForm);
    },
    //树的点击事件
    handleNodeClick(data,Node) {
      console.log("树--------->");
      console.log(data);
      var parameter = { 
                 action:'select',
                 model:'tb_kpi_index',
                 templateNumber:data.templateNumber,
                 kpiItemNumber:data.kpiItemNumber,
                 };

			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: parameter
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
           console.log(res.data)
					 this.tableData = res.data;
					 this.total = res.sumsize;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
    },
    manaegementView(data) {
      //   this.managementVisible = true;
      console.log(data);
    },
    // 获取最大的id
    //考核制表
    calculationStandard(data){
      this.$router.push({
        path:'/gov/kpiindex/calculationstandard',
        query: {
            id: "1"
          }
        })
    },
    //修改
    handleUpdate(index, row) {
      this.dialogTitle = "修改卫生室";
      this.addVisible = true;
      this.idx = row.orgnumber;
      this.ruleForm = Object.assign(this.ruleForm, row);
    },
    handleDel(index, row) {
      this.delVisible = true;
      this.idx = row.orgnumber;
    },
    //得到树的值
    getTreeData() {
      var parameter = { action:'select',model:'tb_kpi_index',templateNumber:'',kpiItemNumber:''};
			 axios.post({
				 url: api.cwweb.action,
				 data: parameter
			 }).then(res => {
				 if (res.code == 0) {
            this.testData = res.data;
				 } else {
					 this.$message.error(res.message);
				 }
			 });

        
     },
    //删除
    doDelete() {
      axios
        .post({
          url: api.secondorg.delete,
          data: {
            orgnumber: this.idx
          }
        })
        .then(res => {
          console.log(api.secondorg.delete, " success", res);
          if (res.code == 0) {
            this.idx = -1;
            this.getData();
            this.$message.success("删除成功");
            this.delVisible = false;
          }
        });
    },
    //获取表格数据
		 //查询列表数据方法
		 getData() {
             var parameter = { 
                 action:'select',
                 model:'tb_kpi_index',
                 templateNumber:'',
                 kpiItemNumber:'',
                 };

			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: parameter
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
           console.log(res.data)
					 this.tableData = res.data;
					 this.total = res.sumsize;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
     },
     //获取模板列表
    getTemplate() {
      var item=[];
      var templateListdata=[];
      var parameter = { 
          action:'select',
          model:'tb_kpi_template',
          keyword:'',
          };

			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: parameter
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
           console.log(res.data)
           templateListdata=res.data;
           for(let k=0;k<templateListdata.length;k++){
             templateListdata[k].children=[];
           }

           this.templateList = templateListdata;

        for(let i=0;i<this.templateList.length;i++){
           setTimeout(() => {
             for(let j=0;j<item.length;j++){
               item[j].children=[];
               this.templateList[i].children.push(item[j])
             }
            //  this.templateList[i].children=item;
             console.log("最终结果");
             console.log(this.templateList);
            // this.getItem(this.templateList[i].templateNumber);
            }, 5000);
                var parameter2 = { 
                 action:'select',
                 model:'tb_kpi_item',
                 templateNumber:this.templateList[i].templateNumber,
                 keyword:'',
                 };

			        this.is_loading = true;
			        axios.post({url: api.commn.action,
				        data: parameter2
			          }).then(res => {
				        this.is_loading = false;
				        if (res.code == 0) {
                  console.log("这是项目")
                  console.log(res.data)
					        item = res.data;
					//  this.total = res.sumsize;
				        } else {
					        this.$message.error(res.message);
				        }
				    });
            
          }
				 } else {
					 this.$message.error(res.message);
				 }
				 });
     },
     //根据模板获取项目列表 
    getItem(data) {
             var parameter = { 
                 action:'select',
                 model:'tb_kpi_item',
                 templateNumber:data,
                 keyword:'',
                 };

			 this.is_loading = true;
			 axios.post({url: api.commn.action,
				 data: parameter
			 }).then(res => {
				 this.is_loading = false;
				 if (res.code == 0) {
           console.log(res.data)
					 this.itemList = res.data;
					//  this.total = res.sumsize;
				 } else {
					 this.$message.error(res.message);
				 }
				 });
     },
    getTestDate(){
       this.templateList=[{
          testlabel: '一级 1',
          children: [{
            testlabel: '二级 1-2',
            test: '一级 1',
          }]
           }]
           console.log(this.templateList);
       
    },
    //获取所有卫生院
    getkpiData() {
      axios
        .get({
          url: api.firstorg.query
        })
        .then(res => {
          if (res.code == 0) {
            this.kpiData = res.data;
          }
        });
    },
    //查询
    handleSearch() {
      this.getData();
    },
    validate(formName) {
      return new Promise((resolve, reject) => {
        this.$refs[formName].validate(valid => {
          if (valid) {
            resolve();
          }
        });
      });
    },
		saveAdd(formName) {
			 if (this.$refs[formName]) {
				 this.$refs[formName].validate(valid => {
					//  if (valid) {axios.post({ url: api.commn.action, data: this.handleData('insert',this.addForm) }).then(res => {
					// 	 if (res.code == 0) {
					// 		 this.addVisible = false;
					// 		 this.$message.success("增加成功");
					// 		 this.getData();
					// 	 } else {
					// 		 this.$message.error(res.message);
					// 	 }
					// 	 });
					//  } else {
					// 		 this.$message.error("验证未通过");
					// 		 return;
					//  }
				 });
			 }
		 },
    getMap() {
      this.mapVisible = true;
    },
    doMap: function() {
      this.ruleForm.location = this.center.lng + "," + this.center.lat;
      this.mapVisible = false;
    },
    /***
     * 地图点击事件。
     */
    getClickInfo(e) {
      this.center.lng = e.point.lng;
      this.center.lat = e.point.lat;
    },
       //强制刷新
    select_stauts(val){
			 this.$forceUpdate();
		 },
    handleAdd(data) {
      this.dialogTitle = "新增考核绩效考核指标";
      this.addVisible = true;
      Object.assign(this.$data.ruleForm, this.$options.data().ruleForm);
    },
      //弹出修改界面方法
		handleEdit(data) {
      console.log(data);
			this.dialogTitle = "修改考核绩效考核指标";
      this.editVisible = true;
			this.ruleForm = Object.assign({}, data);
      // Object.assign(this.$data.ruleForm, this.$options.data().ruleForm);
     },
     handleDelIndicators(index, row){
        console.log(index,row);
          console.log("jjjj");
     },
     	handleCount(index, row){
       console.log(row);
       this.countVisible=true;
     },
     	handleCountDelete(index, row){
       console.log(row);

     },
      handleCheckChange(data, checked, indeterminate) {
        console.log(data, checked, indeterminate);
      },
      
      loadNode(node, resolve) {
        this.getTemplate();
        resolve(this.templateList);
      }

  }
};
</script>

<style scoped>
.handle-box {
  margin-bottom: 20px;
}

.handle-select {
  width: 120px;
}

.handle-input {
  width: 300px;
  display: inline-block;
}
.del-dialog-cnt {
  font-size: 16px;
  text-align: center;
}

.el-col {
  border-radius: 4px;
}
.bg-purple-dark {
  background: #ffffff;
}
.bg-purple {
  background: #ffffff;
}
.bg-purple-light {
  background: #ffffff;
}
.grid-content {
  border-radius: px4px;
  min-height: 800px;
}
.row-bg {
  padding: 10px 0;
  background-color: #f9fafc;
}
.custom-tree-node {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 14px;
  padding-right: 8px;
}
.el-dropdown-link {
    cursor: pointer;
    color: #409EFF;
  }
  .el-icon-arrow-down {
    font-size: 12px;
  }

</style>
