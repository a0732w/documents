<template>
  <div class="table">
    <div class="crumbs">
      <el-breadcrumb separator="/">
        <el-breadcrumb-item>
          <i class="el-icon-tickets"></i>
          考核指标管理/考核指标管理
          </el-breadcrumb-item>
      </el-breadcrumb>
    </div>

    <el-row >
      <el-col class="bg-purple-light" :span="6">
         <div>考核项目</div>
        <div class="grid-content bg-purple">
          <el-tree
            :data="testData"
            :props="defaultProps"
            accordion
            @node-click="handleNodeClick"
          >
            <span class="custom-tree-node" slot-scope="{ node, data }">
              <span>{{ node.indexName }}</span>
              <span>
                <el-button
                  type="text"
                  size="mini"
                  slot="reference"
                  @click="() => showAddWssAlert(data)"
                >
                  增加
                </el-button>
                <el-button
                  type="text"
                  size="mini"
                  slot="reference"
                  @click="() => showEditWssAlert(data)"
                >
                  修改
                </el-button>
                <el-button
                  type="text"
                  size="mini"
                  slot="reference"
                  @click="() => del(data)"
                >
                  删除
                </el-button>
              </span>
            </span>
          </el-tree>
        </div>
      </el-col>
      <el-col :span="18">
        <div class="grid-content bg-purple-light">
            <el-table :data="data" border style="width: 100%" ref="multipleTable">
                <el-table-column prop="firstorgnumber" label="考核模板" ></el-table-column>
                <el-table-column prop="orgname" width="240" label="考核项目" ></el-table-column>
                <el-table-column prop="firstorgname" label="权重" ></el-table-column>
                <el-table-column prop="statename" label="考核项目得分" ></el-table-column>
                <el-table-column prop="legalperson" label="考核指标" ></el-table-column>
                <el-table-column prop="legalperson" label="计算标准" ></el-table-column>
                <el-table-column label="操作" width="200" fixed="right">
                <el-button
                  type="text"
                  size="mini">
                  删除指标
                </el-button>
                <el-button
                  type="text"
                  size="mini"
                   @click="calculationStandard()">
                  计算指标
                </el-button>
                </el-table-column>
            </el-table>
            <div class="pagination">
                <el-pagination 
                    @current-change="handleCurrentChange" 
                    :current-page.sync="currentPage"
                    layout="total, prev, pager, next"
                    :page-size="pageSize"
                    :total="sumsize">
                </el-pagination>
            </div>
          </div>
        </el-col>
    </el-row>

    <!-- 删除提示框 -->
    <el-dialog title="提示" :visible.sync="delVisible" width="300px" center>
      <div class="del-dialog-cnt">删除不可恢复，是否确定删除？</div>
      <span slot="footer" class="dialog-footer">
        <el-button @click="delVisible = false">取 消</el-button>
        <el-button type="primary" @click="doDelete">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script>
import axios from "@/services/axios";
import api from "@/services/api";
import bus from "@/components/common/bus";

export default {
  name: "wsy",
  data() {
    return {
      currentPage: 1,
      pageSize: 10,
      sumsize: 1,
      keyword: "",
      tableData: [],
      cur_page: 1,
      wsyData: [],
      mapkeyword: "",
      managementVisible: false,
      addVisible: false,
      delVisible: false,
      mapVisible: false,
      areaList: [],
      areaProps: {
        value: "code",
        label: "name",
        children: "child"
      },
      testData: [

      ],
      defaultProps: {
        children: "children",
        label: "label"
      },
      mapStyle: {
        width: "550px",
        height: "300px"
      },
      center: { lng: 115.47146, lat: 38.879989 },
      zoom: 15,
      dialogTitle: "",
      ruleForm: {
        orgname: ""
      },
      rules: {
        orgname: [
          { required: true, message: "请输入模板名称", trigger: "blur" }
        ]
      },
      idx: -1
    };
  },
  created() {
    // this.getTreeData();
    this.getTreeData();
    this.getWsyData();

    bus.$on(
      "tags" + this.$router.history.current.fullPath.split("/").join("-"),
      this.getTreeData
    );
  },
  computed: {
    data() {
      return this.tableData;
    }
  },
  methods: {
    // 分页导航
    handleCurrentChange(val) {
      this.cur_page = val;
      this.getTreeData();
    },
    //添加卫生室弹框
    showAddWssAlert() {
      this.dialogTitle = "新增考核绩效考核指标";
      this.addVisible = true;
      Object.assign(this.$data.ruleForm, this.$options.data().ruleForm);
      // this.getMaxnumber();
    },
    showEditWssAlert() {
      this.dialogTitle = "修改考核绩效考核指标";
      this.addVisible = true;
      Object.assign(this.$data.ruleForm, this.$options.data().ruleForm);
    },
    //树的点击事件
    handleNodeClick(data) {
      console.log(data);
    },
    manaegementView(data) {
      //   this.managementVisible = true;
      console.log(data);
    },
    // 获取最大的id
    getMaxnumber() {
      // axios
      //   .get({
      //     url: api.secondorg.getMaxnumber,
      //     data: {
      //       firstorgnumber: this.ruleForm.firstorgnumber
      //     }
      //   })
      //   .then(res => {
      //     this.ruleForm.orgnumber = res.data;
      //   });
    },
    //考核制表
    calculationStandard(data){
      this.$router.push({
        path:'/gov/kpiindex/calculationstandard',
        query: {
            id: "1"
          }
        })
    },
    //修改
    handleUpdate(index, row) {
      this.dialogTitle = "修改卫生室";
      this.addVisible = true;
      this.idx = row.orgnumber;
      this.ruleForm = Object.assign(this.ruleForm, row);
    },
    handleDel(index, row) {
      this.delVisible = true;
      this.idx = row.orgnumber;
    },
    getTreeData() {

      var parameter = { action:'select',model:'tb_kpi_index',templateNumber:'',kpiItemNumber:''};
			 axios.post({
				 url: api.cwweb.action,
				 data: parameter
			 }).then(res => {
				 if (res.code == 0) {
            this.testData = res.data;
				 } else {
					 this.$message.error(res.message);
				 }
			 });

        
     },
    //删除
    doDelete() {
      axios
        .post({
          url: api.secondorg.delete,
          data: {
            orgnumber: this.idx
          }
        })
        .then(res => {
          console.log(api.secondorg.delete, " success", res);
          if (res.code == 0) {
            this.idx = -1;
            this.getTreeData();
            this.$message.success("删除成功");
            this.delVisible = false;
          }
        });
    },
    //获取表格数据
    getTreeData() {
      axios
        .get({
          url: api.secondorg.query,
          data: {
            start: this.cur_page,
            limit: this.pageSize,
            keyword: this.keyword || ""
          }
        })
        .then(res => {
          console.log(api.secondorg.query, " success", res);
          if (res.code == 0) {
            this.tableData = res.data;
            this.sumsize = res.sumsize;
          }
        });
    },
    //获取所有卫生院
    getWsyData() {
      axios
        .get({
          url: api.firstorg.query
        })
        .then(res => {
          if (res.code == 0) {
            this.wsyData = res.data;
          }
        });
    },
    //查询
    handleSearch() {
      this.getTreeData();
    },
    validate(formName) {
      return new Promise((resolve, reject) => {
        this.$refs[formName].validate(valid => {
          if (valid) {
            resolve();
          }
        });
      });
    },
    //新增考核模板
    doSaveAdd(formName) {
      let url =
        this.dialogTitle == "新增考核模板"
          ? api.secondorg.update
          : api.secondorg.add;
      this.validate(formName).then(() => {
        axios
          .post({
            url: url,
            data: this.ruleForm
          })
          .then(res => {
            console.log(url, " success", res);
            if (res.code == 0) {
              this.$message.success(this.dialogTitle + "成功");
              this.getTreeData();
              Object.assign(this.$data.ruleForm, this.$options.data().ruleForm);
              this.addVisible = false;
            } else {
              this.$message.error(res.message);
            }
          });
      });
    },
    getMap() {
      this.mapVisible = true;
    },
    doMap: function() {
      this.ruleForm.location = this.center.lng + "," + this.center.lat;
      this.mapVisible = false;
    },
    /***
     * 地图点击事件。
     */
    getClickInfo(e) {
      this.center.lng = e.point.lng;
      this.center.lat = e.point.lat;
    },
    syncCenterAndZoom(e) {
      const { lng, lat } = e.target.getCenter();
      this.center.lng = lng;
      this.center.lat = lat;
      this.zoom = e.target.getZoom();
    },
    add(data) {
      console.log("新增");
    },
    edit(data) {
      console.log("修改");
    },
    del(data) {
      console.log("删除");
    }
  }
};
</script>

<style scoped>
.handle-box {
  margin-bottom: 20px;
}

.handle-select {
  width: 120px;
}

.handle-input {
  width: 300px;
  display: inline-block;
}
.del-dialog-cnt {
  font-size: 16px;
  text-align: center;
}

.el-col {
  border-radius: 4px;
}
.bg-purple-dark {
  background: #ffffff;
}
.bg-purple {
  background: #ffffff;
}
.bg-purple-light {
  background: #ffffff;
}
.grid-content {
  border-radius: px4px;
  min-height: 800px;
}
.row-bg {
  padding: 10px 0;
  background-color: #f9fafc;
}
.custom-tree-node {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 14px;
  padding-right: 8px;
}
</style>
